<html>
<head>
    <link href="https://fonts.googleapis.com/css?family=Inconsolata" rel="stylesheet">
    <link href="https://cdn.nmyk.io/assets/style-new.css" rel="stylesheet">
    <link href="https://cdn.nmyk.io/assets/favicon.ico" rel="icon">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="tmpchat is a WebRTC-based group text messaging application designed and built by Nick Mykins (nmyk.io)"/>
    <title>tmpch.at - {{.ChannelName}}</title>
    <script>
        const uuidv4 = () => {
            return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>
                (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
            );
        };
        const newSignalingEvent = function(type, data) {
            return JSON.stringify({
            "channel_name": unescape(window.location.pathname.substr(1)),
            "from_user": {"id": myUserId, "name": document.getElementById("myname").value},
            "type": type,
            "data": data
            });
        };
        const nameTag = function (name, isMe) {
            if (isMe) {return " " + name + " • "}
            else { return " • " + name + " "}
        };
        const myUserId = uuidv4();
        window.addEventListener("load", function(event) {
            const messageLog = document.getElementById("messagelog");
            const input = document.getElementById("messagetext");

            const printSystem = function(eventdata) {
                let message = document.createElement("div");
                message.className = "systemmessage";
                message.textContent = eventdata;
                messageLog.appendChild(message);
                if (document.activeElement === input) {
                    messageLog.scrollTop = messageLog.scrollHeight;
                }
            };

            const print = function(message) {
                let name = document.createElement("div");
                name.className = "myname";
                name.textContent = nameTag(document.getElementById("myname").value);
                let msg = document.createElement("div");
                msg.className = "mymessage";
                let pre = document.createElement("pre");
                pre.textContent = message;
                msg.appendChild(pre);
                messageLog.appendChild(msg);
                msg.insertAdjacentHTML("afterBegin", name.outerHTML);
                console.log(msg.outerHTML);
                if (document.activeElement === input) {
                   messageLog.scrollTop = messageLog.scrollHeight;
                }
            };
            let ws = new WebSocket("ws://localhost:7070/");
            ws.onopen = function(event) {
                ws.send(newSignalingEvent(0, null));
            };
            ws.onclose = function(event) {
                print("CLOSE");
                ws = null;
            };
            ws.onmessage = function(event) {
                let message = (JSON.parse(event.data)).data
                if (!message.user) {
                    printSystem(message);
                }
            };
            ws.onerror = function(event) {
                print("ERROR: " + event.data);
            };

            input.onfocus = function(event) {
                messageLog.scrollTop = messageLog.scrollHeight;
            };

            let doubleEnterTs; // Clear chat by double-pressing Enter with no text in the input field
            input.onkeypress = function(event) {
                if(event.key === "Enter" && !event.shiftKey) {
                    if (input.value === "" && (Date.now() - doubleEnterTs < 150)) {
                        document.getElementById("clear").click();
                        return false;
                    }
                    if (input.value === "") {
                        doubleEnterTs = Date.now();
                        return false;
                    }
                    document.getElementById("send").click();
                    event.preventDefault(); // Prevents the addition of a new line in the text field (not needed in a lot of cases)
                }
            };

            document.getElementById("send").onclick = function(event) {
                if (!ws) {
                    return false;
                }
                if (input.value === "") {
                    return false;
                }
                print(input.value);
                document.getElementById("messagetext").value = "";
                return false;
            };

            document.getElementById("clear").onclick = function(event) {
                let node = document.getElementById("messagelog");
                while (node.firstChild) {
                    node.removeChild(node.firstChild);
                }
                document.getElementById("messagetext").focus();
                return false;
            };
            document.getElementById("messagetext").focus();
        });
    </script>
</head>

<body style="
        -webkit-animation-duration: {{.BgAnimationDuration}}s;
        -moz-animation-duration: {{.BgAnimationDuration}}s;
        animation-duration: {{.BgAnimationDuration}}s;
        animation-delay: {{.BgAnimationDelay}}s;">
<div class="vspace50px"></div>
<a href="http://localhost:8081" type="home">tmpchat</a>
<br>
#{{.ChannelName}}

<div class="container" style="width: 80%;">
    <div class="messagelog" id="messagelog"></div>
    <div style="margin-top: 2px; margin-bottom: 10px;">
        <div style="width: 85%; float: left;">
            online: <input type="nametext" id="myname" size=10 maxlength=16 value=anon-00>
        </div>
        <div style="float: right;">
            <input type="submit" id="clear" value="clear">
        </div>
    </div>

    <br><br>

    <form id="message">
        <div class="messagetextcontainer">
            <textarea rows=1 id="messagetext"></textarea>
        </div>

        <div style="float: right;">
            <input type="submit" id="send" value="send">
        </div>
    </form>

    <br>

    <div style="text-align: center;">connected</div>
</div>
</body>

</html>